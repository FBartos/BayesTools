name: "Copilot Setup Steps"

# Allow testing of the setup steps from your repository's "Actions" tab.
on: workflow_dispatch

jobs:
  # The job MUST be called `copilot-setup-steps` or it will not be picked up by Copilot.
  copilot-setup-steps:
    runs-on: ubuntu-latest

    # Set the permissions to the lowest permissions possible needed for your steps.
    # Copilot will be given its own token for its operations.
    permissions:
      # If you want to clone the repository as part of your setup steps, for example to install dependencies, you'll need the `contents: read` permission. If you don't clone the repository in your setup steps, Copilot will do this for you automatically after the steps complete.
      contents: read

    # You can define any steps you want, and they will run before the agent starts.
    # If you do not check out your code, Copilot will do this for you.
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: 'release'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libssl-dev \
            libcurl4-openssl-dev \
            libxml2-dev \
            jags

      - name: Install the required packages
        run: |
          options(repos = c(CRAN = "https://cloud.r-project.org"))
          install.packages(c('devtools', 'testthat', 'vdiffr', 'BayesFactor', 'RoBMA', 'runjags', 'rjags', 'rstan', 'rcmdcheck', 'roxygen2', 'pkgdown', 'covr'))
          devtools::install()
        shell: Rscript {0}

      - name: Verify JAGS installation
        run: |
          jags-terminal --version || echo "JAGS not found in PATH"
          pkg-config --exists jags && echo "JAGS pkg-config found" || echo "JAGS pkg-config not found"

      - name: Run basic package checks
        run: |
          cat('R version:', R.version.string, '\n')
          cat('JAGS available:', system('which jags-terminal', intern = TRUE), '\n')
          devtools::check(manual = FALSE, run_dont_test = TRUE)
        shell: Rscript {0}
